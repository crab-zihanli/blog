import{_ as k}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,f as i,e as d,h as n,i as l,j as a,w as r,k as e,o as c}from"./app-CTBDxFy5.js";const o="/blog/assets/image-DGJ0wPNT.png",A={};function g(B,s){const h=e("Badge"),t=e("font");return c(),p("div",null,[s[1]||(s[1]=i("p",null,[a("初学者在学习了"),i("code",null,"css"),a("之后想看看别人的项目，发现大家基本上都用"),i("code",null,"sass"),a("写了~打开官网看了介绍后发现还是可以把这个理解为"),i("code",null,"css"),a("的超集，基本用法是兼容"),i("code",null,"css"),a("的，遂写一个系列博客文章总结用法，作为学习记录同时做出些具有正外部性的内容产出。")],-1)),d(" more "),s[2]||(s[2]=n('<h2 id="sass是什么-为什么一般见到的后缀是-scss" tabindex="-1"><a class="header-anchor" href="#sass是什么-为什么一般见到的后缀是-scss"><span><code>sass</code>是什么？为什么一般见到的后缀是<code>.scss</code>？</span></a></h2><blockquote><p>Sass is a stylesheet language that’s compiled to CSS.</p></blockquote><p>这是官网的介绍。可以看到首先写的这个<code>sass</code>是要编译成<code>css</code>后再使用的。那为什么要用这个语言来写样式呢？</p><p>优点有（官网写的）：</p><ul><li>It allows you to use variables, nested rules, mixins, functions...</li><li>All with a fully CSS-compatible syntax</li></ul><p>我们知道<code>css</code>写起来很多东西很重复，一层叠一层，就像它的名字“层叠样式表（Cascading Style Sheets，缩写为 CSS）”一样，有时候写了很长后一直出bug，仔细一看前面不小心设了好多个父级的<code>position</code>😴。而<code>sass</code>的名称是<code>Syntactically Awesome Stylesheets</code>，是一个“哇塞的语法样式”，通过嵌套、变量、函数、继承等偏向于脚本语言的设置，让整体编写更简洁。</p><h3 id="sass和scss这俩是什么关系" tabindex="-1"><a class="header-anchor" href="#sass和scss这俩是什么关系"><span><code>sass</code>和<code>scss</code>这俩是什么关系？</span></a></h3><p>继续上官网文档说法：</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Sass has two syntaxes! The SCSS syntax (.scss) is used most commonly. It’s a superset of CSS, which means all valid CSS is also valid SCSS. The indented syntax (.sass) is more unusual: it uses indentation rather than curly braces to nest statements, and newlines instead of semicolons to separate them. All our examples are available in both syntaxes.</p></div><p>翻译过来就是说这个<code>sass</code>有两种语法：</p><ul><li>.scss:常用且是css的超集，完全兼容css的语法；</li><li>.sass:不常用且不是花括号分号语法，是用缩进和换行写的；</li></ul><p><strong>因此！总结下来，<code>sass</code>很强，用它的<code>scss</code>语法来写。</strong></p><h2 id="如何安装与编译" tabindex="-1"><a class="header-anchor" href="#如何安装与编译"><span>如何安装与编译？</span></a></h2><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><p>看到官网那么多安装方法我也是晕了......说是提供两种类型的包。简单一下，虽然原生JS慢，但我的项目也小啊！😲主打一个根据需求安装，所以直接通过<code>npm</code>安装到全局，结束！如果想用更快的，可以在官网了解。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>The <code>sass package</code> is pure JavaScript, which is a little slower but can be installed on all platforms Node.js supports. The <code>sass-embedded</code> package wraps a JS API around the <code>Dart VM</code>, so it’s faster but only supports Windows, Mac OS, and Linux.</p></div><p>安装到全局：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sass</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="编译" tabindex="-1"><a class="header-anchor" href="#编译"><span>编译</span></a></h3><ol><li>最简单直接的编译方式（手动版）</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> input.scss</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> output.css</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>每次sass修改后自动编译（单个文件版）</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sass</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --watch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> input.scss</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> output.css</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>监听整个文件夹，冒号分隔</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sass</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --watch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app/sass:public/stylesheets</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="使用构建工具自动编译" tabindex="-1"><a class="header-anchor" href="#使用构建工具自动编译"><span>使用构建工具自动编译</span></a></h4><p>每次都要这么设置，感觉还是挺麻烦的，尤其是你的样式表放置的位置比较分散。因此得了解下有啥更方便的。我用的开发IDE是<code>vscode</code>，构建工具目前只学到了<code>vite</code>，因此先去看看<code>vue3/vite</code>的官网怎么讲：</p>',27)),l(h,{text:"Bingo~",type:"tip"}),s[3]||(s[3]=a("它说单文件组件直接支持，如果使用的是单文件组件，可以通过 ")),s[4]||(s[4]=i("code",null,'<style lang="scss">',-1)),s[5]||(s[5]=a("（或其他预处理器）自动开启。只要下载了预处理器依赖（前面下载的就是）。")),s[6]||(s[6]=i("figure",null,[i("img",{src:o,alt:"vite官网的介绍",tabindex:"0",loading:"lazy"}),i("figcaption",null,"vite官网的介绍")],-1)),l(t,{color:"grey"},{default:r(()=>s[0]||(s[0]=[a("总体来看不难，但css一个月不写都快忘了。。。")])),_:1}),s[7]||(s[7]=n(`<h2 id="基础语法" tabindex="-1"><a class="header-anchor" href="#基础语法"><span>基础语法</span></a></h2><h3 id="_1-变量" tabindex="-1"><a class="header-anchor" href="#_1-变量"><span>1. 变量</span></a></h3><p>当你有想重复使用的变量，例如背景颜色、字体大小等，可以设置为变量在多个地方重复使用。而且比如你想二次开发的时候，如果有这样已经设置好的变量直接取用就可以，能够很好保持样式的一致性。</p><p>用法是在前面加个<code>$</code>符号即可。</p><div class="language-scss line-numbers-mode" data-highlighter="shiki" data-ext="scss" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$theme-bg-color</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">#</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">333</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  background-color: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$theme-bg-color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当编译的时候，这个变量会自动替换为其保存的值。</p><h3 id="_2-嵌套语法" tabindex="-1"><a class="header-anchor" href="#_2-嵌套语法"><span>2. 嵌套语法</span></a></h3><p>我们知道<code>html</code>语法都是嵌套着来写的，这css非得搞个堆叠的。<code>scss</code>这里做了改进，支撑嵌套语法，这样就可以与<code>html</code>保持一致。其中<code>&amp;</code>是很常用的符号，在<code>sass</code>官网中成为parent selector，通常结合伪类选择器使用，代表当前范围内的外部的选择器（注意父选择器与类型选择器的位置一样，只能放在前面，例如h1.title-content中的h1）。</p><div class="language-scss line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="scss" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">nav</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  ul</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    list-style: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    margin: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    padding: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    li</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      display: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">inline-block</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      margin-right: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        text-decoration: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">#</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">333</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">:hover</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">#</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">007BFF</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>除了这种选择器结构的嵌套，<code>sass</code>支持属性的嵌套，比如<code>font</code>字体有size,family,weight...一系列属性，每次都要打出来很麻烦（虽然但是vscode自动联想挺快的）：</p><div class="language-scss line-numbers-mode" data-highlighter="shiki" data-ext="scss" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  font</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 上面一定要有个空格啊，不然报错。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 哦对了sass还支持这种注释方式，但不会在css中显示</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* 这种注释会显示 */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    size: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">16</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    family: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">Arial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">sans-serif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    weight: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">400</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-不编译的partials" tabindex="-1"><a class="header-anchor" href="#_3-不编译的partials"><span>3. 不编译的Partials</span></a></h3><p>当你有些可以复用的scss代码，只是导入到其它<code>scss</code>中复用，自己本身不需要被编译为<code>css</code>使用，此时就可以这样命名文件<code>_partials.scss</code>，这样编译器就知道不用编译它了。使用方法是利用<code>scss</code>的<code>@use</code>语法，这里不做详细展开，下面的模块会讲。</p><h3 id="_4-模块" tabindex="-1"><a class="header-anchor" href="#_4-模块"><span>4. 模块</span></a></h3><p>如上文所言，当想要复用或者让代码结构更清晰而不是堆叠在一个文件中时（包括变量，Mixins以及函数时），可以引入模块。</p><p>创建模块：</p><div class="language-scss line-numbers-mode" data-highlighter="shiki" data-ext="scss" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//_base.scss</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$primary-color</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">#</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">3498db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$secondary-color</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">#</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">2ecc71</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用：</p><div class="language-scss line-numbers-mode" data-highlighter="shiki" data-ext="scss" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">@use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;base&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//不用下划线，也不用后缀（so smart）</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  color:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">base</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$primary-color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  background-color: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">base</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$secondary-color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-mixins" tabindex="-1"><a class="header-anchor" href="#_5-mixins"><span>5. Mixins</span></a></h3><p>不会翻译hhh，这个是用来复用一个样式，并且提供了灵活性，可以传入一些参数。比如你想显示几个不同颜色的卡片列表，就可以先把卡片的border，大小之类的都定义好，然后传入颜色参数就Ok啦！使用的方法是<code>@include</code>语法，相当于表示你要使用这个定义好的样式。</p><div class="language-scss line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="scss" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">@mixin</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> card</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$color</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">DarkGray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  background-color: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  border-radius: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  padding: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  box-shadow: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> rgba</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 这里是一个使用了mixin的例子</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.card-first</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  @include</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> card</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">#</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">3498db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.card-second</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  @include</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> card</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">#</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">2ecc71</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.card-third</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  @include</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> card</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">#</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">e74c3c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_6-继承" tabindex="-1"><a class="header-anchor" href="#_6-继承"><span>6. 继承</span></a></h3><p>这个跟上面的不同的是，Mixins是创建模板，而这个是你看到别人的挺好看的，我直接说我要复刻下。语法是<code>@extend</code>。</p><div class="language-scss line-numbers-mode" data-highlighter="shiki" data-ext="scss" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.button-basic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  background-color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">#</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">007BFF</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">#</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">fff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  padding: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  border-radius: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.button-alert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  @extend</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> .button-basic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  background-color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">#</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">dc3545</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.button-success</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  @extend</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> .button-basic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  background-color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">#</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">28a745</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-运算" tabindex="-1"><a class="header-anchor" href="#_7-运算"><span>7. 运算</span></a></h3><p>支持运算，同时提供了<code>math</code>这个模块，内置了很多常量和计算函数。其中要注意的是，除法要用内置模块的<code>math.div()</code>，因为<code>/</code>容易起冲突。</p><div class="language-scss line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="scss" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">@use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;sass:math&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.container</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  display: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">flex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">article</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">role</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">main</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  width: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">600</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">960</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 转为比例</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">aside</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">role</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">complementary</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  width: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">300</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">960</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  margin-left: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div>`,28))])}const b=k(A,[["render",g]]),u=JSON.parse('{"path":"/code/frontend/css%E6%A0%B7%E5%BC%8F/scss%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%89%E8%A3%85.html","title":"Sass安装编译与基本语法","lang":"zh-CN","frontmatter":{"title":"Sass安装编译与基本语法","icon":"photo-film","category":["coding","frontend","css"],"tags":["sass"],"isOriginal":true,"description":"初学者在学习了css之后想看看别人的项目，发现大家基本上都用sass写了~打开官网看了介绍后发现还是可以把这个理解为css的超集，基本用法是兼容css的，遂写一个系列博客文章总结用法，作为学习记录同时做出些具有正外部性的内容产出。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Sass安装编译与基本语法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-17T02:37:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zihan Li\\",\\"email\\":\\"lzh_pku2002@163.com\\"}]}"],["meta",{"property":"og:url","content":"https://crab-zihanli.github.io/blog/blog/code/frontend/css%E6%A0%B7%E5%BC%8F/scss%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%89%E8%A3%85.html"}],["meta",{"property":"og:site_name","content":"Zihan Li"}],["meta",{"property":"og:title","content":"Sass安装编译与基本语法"}],["meta",{"property":"og:description","content":"初学者在学习了css之后想看看别人的项目，发现大家基本上都用sass写了~打开官网看了介绍后发现还是可以把这个理解为css的超集，基本用法是兼容css的，遂写一个系列博客文章总结用法，作为学习记录同时做出些具有正外部性的内容产出。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-17T02:37:56.000Z"}],["meta",{"property":"article:tag","content":"sass"}],["meta",{"property":"article:modified_time","content":"2025-05-17T02:37:56.000Z"}]]},"git":{"createdTime":1747315395000,"updatedTime":1747449476000,"contributors":[{"name":"crab-zihanli","username":"crab-zihanli","email":"lzh_pku2002@163.com","commits":2,"url":"https://github.com/crab-zihanli"}]},"readingTime":{"minutes":5.94,"words":1783},"filePathRelative":"code/frontend/css样式/scss入门与安装.md","excerpt":"<p>初学者在学习了<code>css</code>之后想看看别人的项目，发现大家基本上都用<code>sass</code>写了~打开官网看了介绍后发现还是可以把这个理解为<code>css</code>的超集，基本用法是兼容<code>css</code>的，遂写一个系列博客文章总结用法，作为学习记录同时做出些具有正外部性的内容产出。</p>\\n","autoDesc":true}');export{b as comp,u as data};
