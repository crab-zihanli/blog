import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as i,e as n,h as l,k as e,o as h}from"./app-F-sKEuj_.js";const r="/blog/assets/hobbies-FH3kip1c.gif",p={};function d(o,s){return h(),t("div",null,[s[0]||(s[0]=i("blockquote",null,[i("p",null,[e("通过"),i("code",null,"vue3.js"),e("语法写了一个非常简单的自动播放内容的组件，支持悬停后停止播放，更清楚的展示效果。")])],-1)),n(" more "),s[1]||(s[1]=l('<p>在搭建自己的博客时，想要一个自动播放展示自己兴趣爱好（装一下）的轮播图效果，虽然市面上好多现成的组件，不过因为我部署到github静态页面，一直怕把内容搞多了，而且我要的功能很简单（且大概率不会复用，需要的时候再改吧），因此准备自己手搓一个，实现的效果如下图所示：</p><figure><img src="'+r+`" alt="我做的运动爱好展示效果" tabindex="0" loading="lazy"><figcaption>我做的运动爱好展示效果</figcaption></figure><h2 id="自定义组件与使用" tabindex="-1"><a class="header-anchor" href="#自定义组件与使用"><span>自定义组件与使用</span></a></h2><p>在<code>vuepress-theme-hope</code>官网已经提供了<a href="https://theme-hope.vuejs.press/zh/guide/component/sfc.html#doc-changelog" target="_blank" rel="noopener noreferrer">组件注册的方法</a>，这里不再重复赘述，我采用的方法是在<code>.vuepress/components/HobbyCarousel.vue</code>创建了这个自定义组件，然后去<code>config.ts</code>进行了<strong>别名</strong>的配置，因为我实在搞不懂路径（Bushi），反正这样做了之后非常稳妥！</p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// src/.vuepress/config.ts</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">getDirname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;vuepress/utils&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> __dirname</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getDirname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> defineUserConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  alias</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;@HobbyCarousel&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__dirname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;components/HobbyCarousel.vue&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在页面中即<code>md</code>文件的使用相对来说不难，我采用了<strong>局部注册</strong>的方式，如果想要在多个页面都用，也可以全局注册。这里的核心思想是<code>vuepress</code>会将你写的这些<code>md</code>编译为<code>HTML</code>，然后再转为<code>Vue SFC</code>，因此这里直接跟写<code>Vue</code>一样用就可以，比如我的：</p><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## 啥都爱探索点的运动爱好</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;HobbyCarousel/&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- 我这里直接默认了，其实后面设置了参数，可以自定义的 --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;script setup&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  import HobbyCarousel from &quot;@HobbyCarousel&quot;;//一个文件就写一个script哦！</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="轮播图组件的实现" tabindex="-1"><a class="header-anchor" href="#轮播图组件的实现"><span>轮播图组件的实现</span></a></h2><h3 id="_1-html结构搭建" tabindex="-1"><a class="header-anchor" href="#_1-html结构搭建"><span>1. <code>HTML</code>结构搭建</span></a></h3><h3 id="_2-效果好的requestanimationframe-动画方法" tabindex="-1"><a class="header-anchor" href="#_2-效果好的requestanimationframe-动画方法"><span>2. 效果好的<code>requestAnimationFrame()</code>动画方法</span></a></h3><h3 id="_3-页面美化-两侧的遮罩" tabindex="-1"><a class="header-anchor" href="#_3-页面美化-两侧的遮罩"><span>3. 页面美化（两侧的遮罩）</span></a></h3>`,11))])}const g=a(p,[["render",d]]),m=JSON.parse('{"path":"/code/frontend/%E6%89%8B%E5%86%99%E8%87%AA%E5%8A%A8%E6%92%AD%E6%94%BE%E8%BD%AE%E6%92%AD%E5%9B%BE.html","title":"【造个轮子】写个简单展示用的自动播放轮播图","lang":"zh-CN","frontmatter":{"title":"【造个轮子】写个简单展示用的自动播放轮播图","shortTitle":"自动播放轮播图","date":"2025-05-14T00:00:00.000Z","category":["coding","frontend"],"tag":["vue","js"],"description":"通过vue3.js语法写了一个非常简单的自动播放内容的组件，支持悬停后停止播放，更清楚的展示效果。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"【造个轮子】写个简单展示用的自动播放轮播图\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-14T09:56:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zihan Li\\",\\"email\\":\\"lzh_pku2002@163.com\\"}]}"],["meta",{"property":"og:url","content":"https://crab-zihanli.github.io/blog/blog/code/frontend/%E6%89%8B%E5%86%99%E8%87%AA%E5%8A%A8%E6%92%AD%E6%94%BE%E8%BD%AE%E6%92%AD%E5%9B%BE.html"}],["meta",{"property":"og:site_name","content":"Zihan Li"}],["meta",{"property":"og:title","content":"【造个轮子】写个简单展示用的自动播放轮播图"}],["meta",{"property":"og:description","content":"通过vue3.js语法写了一个非常简单的自动播放内容的组件，支持悬停后停止播放，更清楚的展示效果。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-14T09:56:59.000Z"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:tag","content":"vue"}],["meta",{"property":"article:published_time","content":"2025-05-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-14T09:56:59.000Z"}]]},"git":{"createdTime":1747216619000,"updatedTime":1747216619000,"contributors":[{"name":"crab-zihanli","username":"crab-zihanli","email":"lzh_pku2002@163.com","commits":1,"url":"https://github.com/crab-zihanli"}]},"readingTime":{"minutes":1.66,"words":499},"filePathRelative":"code/frontend/手写自动播放轮播图.md","excerpt":"<blockquote>\\n<p>通过<code>vue3.js</code>语法写了一个非常简单的自动播放内容的组件，支持悬停后停止播放，更清楚的展示效果。</p>\\n</blockquote>\\n","autoDesc":true}');export{g as comp,m as data};
